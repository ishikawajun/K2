openapi: 3.0.3
info:
  title: K2-BackEnd API
  description: K2のバックエンドAPI
  version: 1.0.0
servers:
  - url: /
paths:
  /budget:
    get:
      summary: Get budget data from local DB
      description: Return  an array of budget model
      parameters:
        - name: year
          in: query
          description: budget year
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: month
          in: query
          description: budget month
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: A JSON array of budget model
          content:
            application/json:
              schema:
                type: array
                example:
                  - account: book
                    amount: 10000
                  - account: eat
                    amount: 3000
                items:
                  $ref: "#/components/schemas/Budget"
                x-content-type: application/json
    post:
      summary: Create a new budget record
      description: Create a new budget record
      parameters:
        - name: year
          in: query
          description: performance year
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: month
          in: query
          description: performance month
          required: true
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        description: budget record to create
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostDitail"
            example:
              - year: 2023
                month: 1
                account: eat
                amount: 10000
              - year: 2023
                month: 1
                account: book
                amount: 3000
      responses:
        "201":
          description: CREATED
  /performance:
    get:
      summary: Get performance data from local DB
      description: Return  an array of performance model
      parameters:
        - name: year
          in: query
          description: performance year
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: month
          in: query
          description: performance month
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: A JSON array of performance model
          content:
            application/json:
              schema:
                type: array
                example:
                  - account: book
                    amount: 10000
                    balance: 5000
                  - account: eart
                    amount: 3000
                    balance: 100
                items:
                  $ref: "#/components/schemas/Performance"
                x-content-type: application/json
    post:
      summary: Create a new performance record
      description: Create a new performance record
      parameters:
        - name: year
          in: query
          description: performance year
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: month
          in: query
          description: performance month
          required: true
          style: form
          explode: true
          schema:
            type: string
      requestBody:
        description: performance record to create
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostDitail"
            example:
              - year: 2023
                month: 1
                account: eat
                amount: 10000
              - year: 2023
                month: 1
                account: book
                amount: 3000
      responses:
        "201":
          description: CREATED
  /aggregation:
    get:
      summary: Get aggregation data from local DB
      description: Return  an array of aggregation model
      parameters:
        - name: year
          in: query
          description: aggregation year
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: month
          in: query
          description: aggregation month
          required: true
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: A JSON array of aggregation model
          content:
            application/json:
              schema:
                type: array
                example:
                  budget: 100000
                  consum: 95000
                  balance: 5000
                items:
                  $ref: "#/components/schemas/Aggregation"
                x-content-type: application/json
  /present:
    get:
      summary: Get present data from local DB
      description: Return  an array of present model and present aggregation
      responses:
        "200":
          description: A JSON array of aggregation model
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      aggregation:
                        type: integer
                  - type: object
                    properties:
                      presentData:
                        type: array
                        items:
                          $ref: "#/components/schemas/Present"
                example:
                  aggregation: 25000
                  presentData:
                    - depositDate: 202401
                      amount: 10000
                      note: "memo"
                    - depositDate: 202402
                      amount: 15000
                      note: "memo"
                x-content-type: application/json
    post:
      summary: Create a new present data record
      description: Create a new present data record
      requestBody:
        description: Present record to create
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Present"
            example:
              depositDate: 202402
              amount: 15000
              note: "memo"
      responses:
        "201":
          description: CREATED
    put:
      summary: Update a present data record
      description: Update a present data record
      requestBody:
        description: Present record to update
        content:
          application/json:
            schema:
              type: object
              properties:
                presentData:
                  type: array
                  items:
                    $ref: "#/components/schemas/Present"
            example:
              presentData:
                - depositDate: 202401
                  amount: 10000
                  note: "memo"
                - depositDate: 202402
                  amount: 15000
                  note: "memo"
      responses:
        "200":
          description: Updated
  /account_master:
    get:
      summary: Get account data from local DB of Account_Master table.
      description: Return a JSON array of account_master model
      responses:
        "200":
          description: A JSON array of account_master model
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      account_data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Account_Master"
                example:
                  account_data:
                    - account_en: "book"
                      account_jp: "本・教養"
                    - account_en: "clothes"
                      account_jp: "衣服"
                x-content-type: application/json
    post:
      summary: Upsert data record
      description: Upsert account data record
      requestBody:
        description: Account master record upsert to Account_Master table.
        content:
          content:
            schema:
              allOf:
                - type: object
                  properties:
                    account_data:
                      type: array
                      items:
                        $ref: "#/components/schemas/Account_Master"
              example:
                account_data:
                  - account_en: "book"
                    account_jp: "本・教養"
                  - account_en: "clothes"
                    account_jp: "衣服"
      responses:
        "201":
          description: CREATED
  /param_master/{category}:
    get:
      summary: Get param data from local DB of param_master table.
      description: Return a JSON array of ParamMaster model
      parameters:
        - name: category
          in: path
          description: master table category
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A JSON array of ParamMaster model
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      paramData:
                        type: array
                        items:
                          $ref: "#/components/schemas/ParamMaster"
                example:
                  paramData:
                    - category: "account-calcu"
                      key: "base-account-amount"
                      paramName: "口座基準金額"
                      value: "200000"
                    - category: "account-calcu"
                      key: "base-present-amount"
                      paramName: "プレゼント口座移動基準金額"
                      value: "20000"
                x-content-type: application/json
  /param_master:
    post:
      summary: Upsert param data record
      description: Upsert  param data record
      requestBody:
        description: Param data record upsert to param_master table.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParamMaster"
            example:
              - category: "account-calcu"
                key: "base-account-amount"
                paramName: "口座基準金額"
                value: "200000"
              - category: "account-calcu"
                key: "base-present-amount"
                paramName: "プレゼント口座移動基準金額"
                value: "20000"
      responses:
        "201":
          description: CREATED

components:
  schemas:
    Budget:
      required:
        - account
        - amount
      type: object
      properties:
        account:
          type: string
        amount:
          type: integer
          format: int64
    Performance:
      required:
        - account
        - amount
      type: object
      properties:
        account:
          type: string
        amount:
          type: integer
          format: int64
        balance:
          type: integer
          format: int64
    Aggregation:
      required:
        - balance
        - budget
        - consum
      type: object
      properties:
        budget:
          type: integer
          format: int64
        consum:
          type: integer
          format: int64
        balance:
          type: integer
          format: int64
    PostDitail:
      type: array
      items:
        $ref: "#/components/schemas/PostDitail_inner"
    PostDitail_inner:
      required:
        - account
        - month
        - year
      type: object
      properties:
        year:
          type: string
        month:
          type: string
        account:
          type: string
        amount:
          type: integer
          format: int64
    Present:
      required:
        - depositDate
      type: object
      properties:
        depositDate:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
        note:
          type: string
    Account_Master:
      required:
        - account_en
        - account_jp
      type: object
      properties:
        account_en:
          type: string
        account_jp:
          type: string
    ParamMaster:
      required:
        - category
        - key
      type: object
      properties:
        category:
          type: string
        key:
          type: string
        paramName:
          type: string
        value:
          type: string
